ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PWM_1_initVar
  19              		.bss
  20              		.type	PWM_1_initVar, %object
  21              		.size	PWM_1_initVar, 1
  22              	PWM_1_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.PWM_1_Start,"ax",%progbits
  25              		.align	2
  26              		.global	PWM_1_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	PWM_1_Start, %function
  30              	PWM_1_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1.c"
   1:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c  
   3:.\Generated_Source\PSoC5/PWM_1.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/PWM_1.c **** *
   5:.\Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks. 
  10:.\Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present 
  11:.\Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_1.c **** *
  15:.\Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_1.c **** *
  17:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions, 
  20:.\Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  21:.\Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_1.c **** 
  24:.\Generated_Source\PSoC5/PWM_1.c **** #include "cytypes.h"
  25:.\Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 2


  26:.\Generated_Source\PSoC5/PWM_1.c **** 
  27:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  28:.\Generated_Source\PSoC5/PWM_1.c **** 
  29:.\Generated_Source\PSoC5/PWM_1.c **** 
  30:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  32:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/PWM_1.c **** *
  34:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  35:.\Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the 
  36:.\Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  37:.\Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  38:.\Generated_Source\PSoC5/PWM_1.c **** *
  39:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
  40:.\Generated_Source\PSoC5/PWM_1.c **** *  None  
  41:.\Generated_Source\PSoC5/PWM_1.c **** *
  42:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
  43:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  44:.\Generated_Source\PSoC5/PWM_1.c **** *
  45:.\Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  46:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the 
  47:.\Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  48:.\Generated_Source\PSoC5/PWM_1.c **** *
  49:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  51:.\Generated_Source\PSoC5/PWM_1.c **** {
  33              		.loc 1 51 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  52:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  53:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  43              		.loc 1 53 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  54:.\Generated_Source\PSoC5/PWM_1.c ****     {
  55:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  48              		.loc 1 55 0
  49 000c FFF7FEFF 		bl	PWM_1_Init
  56:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  50              		.loc 1 56 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
  54              	.L2:
  57:.\Generated_Source\PSoC5/PWM_1.c ****     }
  58:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  55              		.loc 1 58 0
  56 0016 FFF7FEFF 		bl	PWM_1_Enable
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 3


  59:.\Generated_Source\PSoC5/PWM_1.c **** 
  60:.\Generated_Source\PSoC5/PWM_1.c **** }
  57              		.loc 1 60 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	PWM_1_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	PWM_1_Start, .-PWM_1_Start
  66              		.section	.text.PWM_1_Init,"ax",%progbits
  67              		.align	2
  68              		.global	PWM_1_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_1_Init, %function
  72              	PWM_1_Init:
  73              	.LFB1:
  61:.\Generated_Source\PSoC5/PWM_1.c **** 
  62:.\Generated_Source\PSoC5/PWM_1.c **** 
  63:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  64:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  65:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  66:.\Generated_Source\PSoC5/PWM_1.c **** *
  67:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  68:.\Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the 
  69:.\Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in 
  70:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  71:.\Generated_Source\PSoC5/PWM_1.c **** *
  72:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
  73:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  74:.\Generated_Source\PSoC5/PWM_1.c **** *
  75:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
  76:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  77:.\Generated_Source\PSoC5/PWM_1.c **** *
  78:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  79:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  80:.\Generated_Source\PSoC5/PWM_1.c **** {
  74              		.loc 1 80 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  81:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  82:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  83:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  84:.\Generated_Source\PSoC5/PWM_1.c ****     
  85:.\Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction) 
  86:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 4


  87:.\Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  88:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  89:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  90:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  91:.\Generated_Source\PSoC5/PWM_1.c ****     
  92:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  93:.\Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  94:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
  86              		.loc 1 94 0
  87 0006 284B     		ldr	r3, .L6
  88 0008 274A     		ldr	r2, .L6
  89 000a 1278     		ldrb	r2, [r2]
  90 000c D2B2     		uxtb	r2, r2
  91 000e 42F00202 		orr	r2, r2, #2
  92 0012 D2B2     		uxtb	r2, r2
  93 0014 1A70     		strb	r2, [r3]
  95:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
  96:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
  97:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
  98:.\Generated_Source\PSoC5/PWM_1.c ****                 
  99:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
  94              		.loc 1 99 0
  95 0016 254B     		ldr	r3, .L6+4
  96 0018 1B78     		ldrb	r3, [r3]
  97 001a DBB2     		uxtb	r3, r3
  98 001c 23F07003 		bic	r3, r3, #112
  99 0020 FB71     		strb	r3, [r7, #7]
 100:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 100              		.loc 1 100 0
 101 0022 224B     		ldr	r3, .L6+4
 102 0024 FA79     		ldrb	r2, [r7, #7]
 103 0026 42F01002 		orr	r2, r2, #16
 104 002a D2B2     		uxtb	r2, r2
 105 002c 1A70     		strb	r2, [r3]
 101:.\Generated_Source\PSoC5/PWM_1.c ****         
 102:.\Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 103:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 106              		.loc 1 103 0
 107 002e 204B     		ldr	r3, .L6+8
 108 0030 1F4A     		ldr	r2, .L6+8
 109 0032 1278     		ldrb	r2, [r2]
 110 0034 D2B2     		uxtb	r2, r2
 111 0036 22F03002 		bic	r2, r2, #48
 112 003a D2B2     		uxtb	r2, r2
 113 003c 1A70     		strb	r2, [r3]
 104:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;     
 114              		.loc 1 104 0
 115 003e 1C4B     		ldr	r3, .L6+8
 116 0040 1B4A     		ldr	r2, .L6+8
 117 0042 1278     		ldrb	r2, [r2]
 118 0044 D2B2     		uxtb	r2, r2
 119 0046 42F03002 		orr	r2, r2, #48
 120 004a D2B2     		uxtb	r2, r2
 121 004c 1A70     		strb	r2, [r3]
 105:.\Generated_Source\PSoC5/PWM_1.c ****                 
 106:.\Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 107:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 5


 122              		.loc 1 107 0
 123 004e 184B     		ldr	r3, .L6+8
 124 0050 174A     		ldr	r2, .L6+8
 125 0052 1278     		ldrb	r2, [r2]
 126 0054 D2B2     		uxtb	r2, r2
 127 0056 22F00F02 		bic	r2, r2, #15
 128 005a D2B2     		uxtb	r2, r2
 129 005c 1A70     		strb	r2, [r3]
 108:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 130              		.loc 1 108 0
 131 005e 144B     		ldr	r3, .L6+8
 132 0060 134A     		ldr	r2, .L6+8
 133 0062 1278     		ldrb	r2, [r2]
 134 0064 D2B2     		uxtb	r2, r2
 135 0066 42F00F02 		orr	r2, r2, #15
 136 006a D2B2     		uxtb	r2, r2
 137 006c 1A70     		strb	r2, [r3]
 109:.\Generated_Source\PSoC5/PWM_1.c ****        
 110:.\Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 111:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 112:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) & ((uint8)(~PWM_1_CTRL_CMPMODE1
 113:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE | 
 114:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 115:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 116:.\Generated_Source\PSoC5/PWM_1.c ****         
 117:.\Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 118:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 119:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 120:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 121:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 122:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 123:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 124:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 125:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 126:.\Generated_Source\PSoC5/PWM_1.c **** 
 127:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 128:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 129:.\Generated_Source\PSoC5/PWM_1.c ****         
 130:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 138              		.loc 1 130 0
 139 006e FF20     		movs	r0, #255
 140 0070 FFF7FEFF 		bl	PWM_1_WritePeriod
 131:.\Generated_Source\PSoC5/PWM_1.c **** 
 132:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 133:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 141              		.loc 1 133 0
 142 0074 7F20     		movs	r0, #127
 143 0076 FFF7FEFF 		bl	PWM_1_WriteCompare
 134:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 135:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 136:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 137:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 138:.\Generated_Source\PSoC5/PWM_1.c ****         
 139:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 140:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 141:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 142:.\Generated_Source\PSoC5/PWM_1.c ****         
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 6


 143:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 144:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 145:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 146:.\Generated_Source\PSoC5/PWM_1.c **** 
 147:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 148:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 144              		.loc 1 148 0
 145 007a 0020     		movs	r0, #0
 146 007c FFF7FEFF 		bl	PWM_1_SetInterruptMode
 149:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 150:.\Generated_Source\PSoC5/PWM_1.c ****         
 151:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 152:.\Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 153:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 147              		.loc 1 153 0
 148 0080 0C4B     		ldr	r3, .L6+12
 149 0082 0C4A     		ldr	r2, .L6+12
 150 0084 1278     		ldrb	r2, [r2]
 151 0086 D2B2     		uxtb	r2, r2
 152 0088 42F00102 		orr	r2, r2, #1
 153 008c D2B2     		uxtb	r2, r2
 154 008e 1A70     		strb	r2, [r3]
 154:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 155:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 155              		.loc 1 155 0
 156 0090 094B     		ldr	r3, .L6+16
 157 0092 094A     		ldr	r2, .L6+16
 158 0094 1278     		ldrb	r2, [r2]
 159 0096 D2B2     		uxtb	r2, r2
 160 0098 42F00102 		orr	r2, r2, #1
 161 009c D2B2     		uxtb	r2, r2
 162 009e 1A70     		strb	r2, [r3]
 156:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 157:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 158:.\Generated_Source\PSoC5/PWM_1.c ****             
 159:.\Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 160:.\Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 161:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 162:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 163:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 164:.\Generated_Source\PSoC5/PWM_1.c ****             
 165:.\Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 166:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 167:.\Generated_Source\PSoC5/PWM_1.c ****             
 168:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 169:.\Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 170:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 171:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 172:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 173:.\Generated_Source\PSoC5/PWM_1.c **** }
 163              		.loc 1 173 0
 164 00a0 0837     		adds	r7, r7, #8
 165 00a2 BD46     		mov	sp, r7
 166              		@ sp needed
 167 00a4 80BD     		pop	{r7, pc}
 168              	.L7:
 169 00a6 00BF     		.align	2
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 7


 170              	.L6:
 171 00a8 004F0040 		.word	1073762048
 172 00ac 024F0040 		.word	1073762050
 173 00b0 0B4F0040 		.word	1073762059
 174 00b4 A3430040 		.word	1073759139
 175 00b8 014F0040 		.word	1073762049
 176              		.cfi_endproc
 177              	.LFE1:
 178              		.size	PWM_1_Init, .-PWM_1_Init
 179              		.section	.text.PWM_1_Enable,"ax",%progbits
 180              		.align	2
 181              		.global	PWM_1_Enable
 182              		.thumb
 183              		.thumb_func
 184              		.type	PWM_1_Enable, %function
 185              	PWM_1_Enable:
 186              	.LFB2:
 174:.\Generated_Source\PSoC5/PWM_1.c **** 
 175:.\Generated_Source\PSoC5/PWM_1.c **** 
 176:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 177:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 178:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 179:.\Generated_Source\PSoC5/PWM_1.c **** *
 180:.\Generated_Source\PSoC5/PWM_1.c **** * Summary: 
 181:.\Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 182:.\Generated_Source\PSoC5/PWM_1.c **** *
 183:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 184:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 185:.\Generated_Source\PSoC5/PWM_1.c **** *
 186:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 187:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 188:.\Generated_Source\PSoC5/PWM_1.c **** *
 189:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects: 
 190:.\Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 191:.\Generated_Source\PSoC5/PWM_1.c **** *
 192:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 194:.\Generated_Source\PSoC5/PWM_1.c **** {
 187              		.loc 1 194 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192 0000 80B4     		push	{r7}
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 7, -4
 195 0002 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 195:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 196:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 197:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 197              		.loc 1 197 0
 198 0004 0D4B     		ldr	r3, .L9
 199 0006 0D4A     		ldr	r2, .L9
 200 0008 1278     		ldrb	r2, [r2]
 201 000a D2B2     		uxtb	r2, r2
 202 000c 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 8


 203 0010 D2B2     		uxtb	r2, r2
 204 0012 1A70     		strb	r2, [r3]
 198:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205              		.loc 1 198 0
 206 0014 0A4B     		ldr	r3, .L9+4
 207 0016 0A4A     		ldr	r2, .L9+4
 208 0018 1278     		ldrb	r2, [r2]
 209 001a D2B2     		uxtb	r2, r2
 210 001c 42F00102 		orr	r2, r2, #1
 211 0020 D2B2     		uxtb	r2, r2
 212 0022 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 200:.\Generated_Source\PSoC5/PWM_1.c ****     
 201:.\Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 202:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 213              		.loc 1 203 0
 214 0024 074B     		ldr	r3, .L9+8
 215 0026 074A     		ldr	r2, .L9+8
 216 0028 1278     		ldrb	r2, [r2]
 217 002a D2B2     		uxtb	r2, r2
 218 002c 42F00102 		orr	r2, r2, #1
 219 0030 D2B2     		uxtb	r2, r2
 220 0032 1A70     		strb	r2, [r3]
 204:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 205:.\Generated_Source\PSoC5/PWM_1.c **** }
 221              		.loc 1 205 0
 222 0034 BD46     		mov	sp, r7
 223              		@ sp needed
 224 0036 5DF8047B 		ldr	r7, [sp], #4
 225 003a 7047     		bx	lr
 226              	.L10:
 227              		.align	2
 228              	.L9:
 229 003c A3430040 		.word	1073759139
 230 0040 B3430040 		.word	1073759155
 231 0044 004F0040 		.word	1073762048
 232              		.cfi_endproc
 233              	.LFE2:
 234              		.size	PWM_1_Enable, .-PWM_1_Enable
 235              		.section	.text.PWM_1_Stop,"ax",%progbits
 236              		.align	2
 237              		.global	PWM_1_Stop
 238              		.thumb
 239              		.thumb_func
 240              		.type	PWM_1_Stop, %function
 241              	PWM_1_Stop:
 242              	.LFB3:
 206:.\Generated_Source\PSoC5/PWM_1.c **** 
 207:.\Generated_Source\PSoC5/PWM_1.c **** 
 208:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 209:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 210:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 211:.\Generated_Source\PSoC5/PWM_1.c **** *
 212:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 213:.\Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 214:.\Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 9


 215:.\Generated_Source\PSoC5/PWM_1.c **** *
 216:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 217:.\Generated_Source\PSoC5/PWM_1.c **** *  None  
 218:.\Generated_Source\PSoC5/PWM_1.c **** *
 219:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 220:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 221:.\Generated_Source\PSoC5/PWM_1.c **** *
 222:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 223:.\Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 224:.\Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 225:.\Generated_Source\PSoC5/PWM_1.c **** *
 226:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
 228:.\Generated_Source\PSoC5/PWM_1.c **** {
 243              		.loc 1 228 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248 0000 80B4     		push	{r7}
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 7, -4
 251 0002 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 230:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 253              		.loc 1 230 0
 254 0004 0D4B     		ldr	r3, .L12
 255 0006 0D4A     		ldr	r2, .L12
 256 0008 1278     		ldrb	r2, [r2]
 257 000a D2B2     		uxtb	r2, r2
 258 000c 22F00102 		bic	r2, r2, #1
 259 0010 D2B2     		uxtb	r2, r2
 260 0012 1A70     		strb	r2, [r3]
 231:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 232:.\Generated_Source\PSoC5/PWM_1.c ****     
 233:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 234:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 235:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 261              		.loc 1 235 0
 262 0014 0A4B     		ldr	r3, .L12+4
 263 0016 0A4A     		ldr	r2, .L12+4
 264 0018 1278     		ldrb	r2, [r2]
 265 001a D2B2     		uxtb	r2, r2
 266 001c 22F00102 		bic	r2, r2, #1
 267 0020 D2B2     		uxtb	r2, r2
 268 0022 1A70     		strb	r2, [r3]
 236:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 269              		.loc 1 236 0
 270 0024 074B     		ldr	r3, .L12+8
 271 0026 074A     		ldr	r2, .L12+8
 272 0028 1278     		ldrb	r2, [r2]
 273 002a D2B2     		uxtb	r2, r2
 274 002c 22F00102 		bic	r2, r2, #1
 275 0030 D2B2     		uxtb	r2, r2
 276 0032 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 10


 238:.\Generated_Source\PSoC5/PWM_1.c **** }
 277              		.loc 1 238 0
 278 0034 BD46     		mov	sp, r7
 279              		@ sp needed
 280 0036 5DF8047B 		ldr	r7, [sp], #4
 281 003a 7047     		bx	lr
 282              	.L13:
 283              		.align	2
 284              	.L12:
 285 003c 004F0040 		.word	1073762048
 286 0040 A3430040 		.word	1073759139
 287 0044 B3430040 		.word	1073759155
 288              		.cfi_endproc
 289              	.LFE3:
 290              		.size	PWM_1_Stop, .-PWM_1_Stop
 291              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_1_WritePeriod
 294              		.thumb
 295              		.thumb_func
 296              		.type	PWM_1_WritePeriod, %function
 297              	PWM_1_WritePeriod:
 298              	.LFB4:
 239:.\Generated_Source\PSoC5/PWM_1.c **** 
 240:.\Generated_Source\PSoC5/PWM_1.c **** 
 241:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 242:.\Generated_Source\PSoC5/PWM_1.c **** 	#if (PWM_1_CompareMode1SW)
 243:.\Generated_Source\PSoC5/PWM_1.c **** 
 244:.\Generated_Source\PSoC5/PWM_1.c **** 
 245:.\Generated_Source\PSoC5/PWM_1.c **** 		/*******************************************************************************
 246:.\Generated_Source\PSoC5/PWM_1.c **** 		* Function Name: PWM_1_SetCompareMode
 247:.\Generated_Source\PSoC5/PWM_1.c **** 		********************************************************************************
 248:.\Generated_Source\PSoC5/PWM_1.c **** 		* 
 249:.\Generated_Source\PSoC5/PWM_1.c **** 		* Summary:
 250:.\Generated_Source\PSoC5/PWM_1.c **** 		*  This function writes the Compare Mode for the pwm output when in Dither mode,
 251:.\Generated_Source\PSoC5/PWM_1.c **** 		*  Center Align Mode or One Output Mode.
 252:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 253:.\Generated_Source\PSoC5/PWM_1.c **** 		* Parameters:
 254:.\Generated_Source\PSoC5/PWM_1.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 255:.\Generated_Source\PSoC5/PWM_1.c **** 		*                defined in the H file as input arguments.
 256:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 257:.\Generated_Source\PSoC5/PWM_1.c **** 		* Return:
 258:.\Generated_Source\PSoC5/PWM_1.c **** 		*  None
 259:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 260:.\Generated_Source\PSoC5/PWM_1.c **** 		*******************************************************************************/
 261:.\Generated_Source\PSoC5/PWM_1.c **** 		void PWM_1_SetCompareMode(uint8 comparemode) 
 262:.\Generated_Source\PSoC5/PWM_1.c **** 		{
 263:.\Generated_Source\PSoC5/PWM_1.c **** 		    #if(PWM_1_UsingFixedFunction)
 264:.\Generated_Source\PSoC5/PWM_1.c ****             
 265:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 266:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 267:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 268:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 269:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 270:.\Generated_Source\PSoC5/PWM_1.c ****             
 271:.\Generated_Source\PSoC5/PWM_1.c **** 	            PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 272:.\Generated_Source\PSoC5/PWM_1.c **** 	            PWM_1_CONTROL3 |= comparemodemasked;     
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 11


 273:.\Generated_Source\PSoC5/PWM_1.c **** 		                
 274:.\Generated_Source\PSoC5/PWM_1.c **** 		    #elif (PWM_1_UseControl)
 275:.\Generated_Source\PSoC5/PWM_1.c **** 		        
 276:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 277:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 278:.\Generated_Source\PSoC5/PWM_1.c ****     		                                    PWM_1_CTRL_CMPMODE1_MASK;
 279:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 280:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;             
 281:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 282:.\Generated_Source\PSoC5/PWM_1.c ****                 
 283:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)                            
 284:.\Generated_Source\PSoC5/PWM_1.c ****     		        uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT))
 285:.\Generated_Source\PSoC5/PWM_1.c ****     		                                   PWM_1_CTRL_CMPMODE2_MASK;
 286:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 287:.\Generated_Source\PSoC5/PWM_1.c ****     		        uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;                
 288:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 289:.\Generated_Source\PSoC5/PWM_1.c ****                 
 290:.\Generated_Source\PSoC5/PWM_1.c **** 		        /*Clear existing mode */
 291:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK | PWM_1_CTRL_CMPMODE2_MASK))); 
 292:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 293:.\Generated_Source\PSoC5/PWM_1.c **** 		        
 294:.\Generated_Source\PSoC5/PWM_1.c **** 		    #else
 295:.\Generated_Source\PSoC5/PWM_1.c **** 		        uint8 temp = comparemode;
 296:.\Generated_Source\PSoC5/PWM_1.c **** 		    #endif /* (PWM_1_UsingFixedFunction) */
 297:.\Generated_Source\PSoC5/PWM_1.c **** 		}
 298:.\Generated_Source\PSoC5/PWM_1.c **** 	#endif /* PWM_1_CompareMode1SW */
 299:.\Generated_Source\PSoC5/PWM_1.c **** 
 300:.\Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 301:.\Generated_Source\PSoC5/PWM_1.c **** 
 302:.\Generated_Source\PSoC5/PWM_1.c **** 	#if (PWM_1_CompareMode1SW)
 303:.\Generated_Source\PSoC5/PWM_1.c **** 
 304:.\Generated_Source\PSoC5/PWM_1.c **** 
 305:.\Generated_Source\PSoC5/PWM_1.c **** 		/*******************************************************************************
 306:.\Generated_Source\PSoC5/PWM_1.c **** 		* Function Name: PWM_1_SetCompareMode1
 307:.\Generated_Source\PSoC5/PWM_1.c **** 		********************************************************************************
 308:.\Generated_Source\PSoC5/PWM_1.c **** 		* 
 309:.\Generated_Source\PSoC5/PWM_1.c **** 		* Summary:
 310:.\Generated_Source\PSoC5/PWM_1.c **** 		*  This function writes the Compare Mode for the pwm or pwm1 output
 311:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 312:.\Generated_Source\PSoC5/PWM_1.c **** 		* Parameters:  
 313:.\Generated_Source\PSoC5/PWM_1.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 314:.\Generated_Source\PSoC5/PWM_1.c **** 		*                defined in the H file as input arguments.
 315:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 316:.\Generated_Source\PSoC5/PWM_1.c **** 		* Return: 
 317:.\Generated_Source\PSoC5/PWM_1.c **** 		*  None
 318:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 319:.\Generated_Source\PSoC5/PWM_1.c **** 		*******************************************************************************/
 320:.\Generated_Source\PSoC5/PWM_1.c **** 		void PWM_1_SetCompareMode1(uint8 comparemode) 
 321:.\Generated_Source\PSoC5/PWM_1.c **** 		{
 322:.\Generated_Source\PSoC5/PWM_1.c **** 		    #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 323:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 324:.\Generated_Source\PSoC5/PWM_1.c ****     		                               PWM_1_CTRL_CMPMODE1_MASK;
 325:.\Generated_Source\PSoC5/PWM_1.c **** 		    #else
 326:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;                
 327:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 328:.\Generated_Source\PSoC5/PWM_1.c ****                    
 329:.\Generated_Source\PSoC5/PWM_1.c **** 		    #if (PWM_1_UseControl)
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 12


 330:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 331:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL |= comparemodemasked;
 332:.\Generated_Source\PSoC5/PWM_1.c **** 		    #endif /* (PWM_1_UseControl) */
 333:.\Generated_Source\PSoC5/PWM_1.c **** 		}
 334:.\Generated_Source\PSoC5/PWM_1.c **** 	#endif /* PWM_1_CompareMode1SW */
 335:.\Generated_Source\PSoC5/PWM_1.c **** 
 336:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 337:.\Generated_Source\PSoC5/PWM_1.c **** 
 338:.\Generated_Source\PSoC5/PWM_1.c **** 
 339:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 340:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 341:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 342:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 343:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 344:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 345:.\Generated_Source\PSoC5/PWM_1.c ****     *
 346:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 347:.\Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 348:.\Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 349:.\Generated_Source\PSoC5/PWM_1.c ****     *
 350:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 351:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 352:.\Generated_Source\PSoC5/PWM_1.c ****     *
 353:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 354:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 355:.\Generated_Source\PSoC5/PWM_1.c ****     {
 356:.\Generated_Source\PSoC5/PWM_1.c **** 
 357:.\Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 358:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) & 
 359:.\Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 360:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 361:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;            
 362:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 363:.\Generated_Source\PSoC5/PWM_1.c ****         
 364:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 365:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 366:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 367:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 368:.\Generated_Source\PSoC5/PWM_1.c ****     }
 369:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 370:.\Generated_Source\PSoC5/PWM_1.c **** 
 371:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 372:.\Generated_Source\PSoC5/PWM_1.c **** 
 373:.\Generated_Source\PSoC5/PWM_1.c **** 
 374:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 375:.\Generated_Source\PSoC5/PWM_1.c **** 
 376:.\Generated_Source\PSoC5/PWM_1.c **** 
 377:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 378:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 379:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 380:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 381:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 382:.\Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be 
 383:.\Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API 
 384:.\Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function 
 385:.\Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.    
 386:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 13


 387:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 388:.\Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 389:.\Generated_Source\PSoC5/PWM_1.c ****     *
 390:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 391:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 392:.\Generated_Source\PSoC5/PWM_1.c ****     *
 393:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects: 
 394:.\Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 395:.\Generated_Source\PSoC5/PWM_1.c ****     *
 396:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 397:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 398:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 399:.\Generated_Source\PSoC5/PWM_1.c ****     {
 400:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
 401:.\Generated_Source\PSoC5/PWM_1.c ****     }
 402:.\Generated_Source\PSoC5/PWM_1.c **** 
 403:.\Generated_Source\PSoC5/PWM_1.c **** 
 404:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 405:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 406:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 407:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 408:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 409:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 410:.\Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 411:.\Generated_Source\PSoC5/PWM_1.c ****     *
 412:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 413:.\Generated_Source\PSoC5/PWM_1.c ****     *  None  
 414:.\Generated_Source\PSoC5/PWM_1.c ****     *
 415:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 416:.\Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 417:.\Generated_Source\PSoC5/PWM_1.c ****     *
 418:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 419:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 420:.\Generated_Source\PSoC5/PWM_1.c ****     {
 421:.\Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 422:.\Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 423:.\Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 424:.\Generated_Source\PSoC5/PWM_1.c ****         (void)PWM_1_COUNTERCAP_LSB;
 425:.\Generated_Source\PSoC5/PWM_1.c ****         
 426:.\Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO (or capture register for Fixed Function)*/
 427:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 428:.\Generated_Source\PSoC5/PWM_1.c ****     }
 429:.\Generated_Source\PSoC5/PWM_1.c **** 
 430:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseStatus)
 431:.\Generated_Source\PSoC5/PWM_1.c **** 
 432:.\Generated_Source\PSoC5/PWM_1.c **** 
 433:.\Generated_Source\PSoC5/PWM_1.c ****             /*******************************************************************************
 434:.\Generated_Source\PSoC5/PWM_1.c ****             * Function Name: PWM_1_ClearFIFO
 435:.\Generated_Source\PSoC5/PWM_1.c ****             ********************************************************************************
 436:.\Generated_Source\PSoC5/PWM_1.c ****             * 
 437:.\Generated_Source\PSoC5/PWM_1.c ****             * Summary:
 438:.\Generated_Source\PSoC5/PWM_1.c ****             *  This function clears all capture data from the capture FIFO
 439:.\Generated_Source\PSoC5/PWM_1.c ****             *
 440:.\Generated_Source\PSoC5/PWM_1.c ****             * Parameters:  
 441:.\Generated_Source\PSoC5/PWM_1.c ****             *  None
 442:.\Generated_Source\PSoC5/PWM_1.c ****             *
 443:.\Generated_Source\PSoC5/PWM_1.c ****             * Return: 
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 14


 444:.\Generated_Source\PSoC5/PWM_1.c ****             *  None
 445:.\Generated_Source\PSoC5/PWM_1.c ****             *
 446:.\Generated_Source\PSoC5/PWM_1.c ****             *******************************************************************************/
 447:.\Generated_Source\PSoC5/PWM_1.c ****             void PWM_1_ClearFIFO(void) 
 448:.\Generated_Source\PSoC5/PWM_1.c ****             {
 449:.\Generated_Source\PSoC5/PWM_1.c ****                 while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 450:.\Generated_Source\PSoC5/PWM_1.c ****                 {
 451:.\Generated_Source\PSoC5/PWM_1.c ****                     (void)PWM_1_ReadCapture();
 452:.\Generated_Source\PSoC5/PWM_1.c ****                 }
 453:.\Generated_Source\PSoC5/PWM_1.c ****             }
 454:.\Generated_Source\PSoC5/PWM_1.c **** 
 455:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* PWM_1_UseStatus */
 456:.\Generated_Source\PSoC5/PWM_1.c **** 
 457:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 458:.\Generated_Source\PSoC5/PWM_1.c **** 
 459:.\Generated_Source\PSoC5/PWM_1.c **** 
 460:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 462:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 463:.\Generated_Source\PSoC5/PWM_1.c **** * 
 464:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 465:.\Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period 
 466:.\Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 467:.\Generated_Source\PSoC5/PWM_1.c **** *
 468:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 469:.\Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0 
 470:.\Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 471:.\Generated_Source\PSoC5/PWM_1.c **** *
 472:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 473:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 474:.\Generated_Source\PSoC5/PWM_1.c **** *
 475:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 476:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 477:.\Generated_Source\PSoC5/PWM_1.c **** {
 299              		.loc 1 477 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 83B0     		sub	sp, sp, #12
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 311 0006 0346     		mov	r3, r0
 312 0008 FB71     		strb	r3, [r7, #7]
 478:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 479:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 313              		.loc 1 479 0
 314 000a 044B     		ldr	r3, .L15
 315 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 316 000e 92B2     		uxth	r2, r2
 317 0010 1A80     		strh	r2, [r3]	@ movhi
 480:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 481:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 15


 482:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 483:.\Generated_Source\PSoC5/PWM_1.c **** }
 318              		.loc 1 483 0
 319 0012 0C37     		adds	r7, r7, #12
 320 0014 BD46     		mov	sp, r7
 321              		@ sp needed
 322 0016 5DF8047B 		ldr	r7, [sp], #4
 323 001a 7047     		bx	lr
 324              	.L16:
 325              		.align	2
 326              	.L15:
 327 001c 044F0040 		.word	1073762052
 328              		.cfi_endproc
 329              	.LFE4:
 330              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 331              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 332              		.align	2
 333              		.global	PWM_1_WriteCompare
 334              		.thumb
 335              		.thumb_func
 336              		.type	PWM_1_WriteCompare, %function
 337              	PWM_1_WriteCompare:
 338              	.LFB5:
 484:.\Generated_Source\PSoC5/PWM_1.c **** 
 485:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 486:.\Generated_Source\PSoC5/PWM_1.c **** 
 487:.\Generated_Source\PSoC5/PWM_1.c **** 
 488:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 489:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 490:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 491:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 492:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 493:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 494:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock. 
 495:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is 
 496:.\Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in 
 497:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 498:.\Generated_Source\PSoC5/PWM_1.c ****     *
 499:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 500:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.  
 501:.\Generated_Source\PSoC5/PWM_1.c ****     *
 502:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 503:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 504:.\Generated_Source\PSoC5/PWM_1.c ****     *
 505:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 506:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 507:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 508:.\Generated_Source\PSoC5/PWM_1.c ****     *
 509:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 510:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 511:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 512:.\Generated_Source\PSoC5/PWM_1.c ****     {	
 339              		.loc 1 512 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343              		@ link register save eliminated.
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 16


 344 0000 80B4     		push	{r7}
 345              		.cfi_def_cfa_offset 4
 346              		.cfi_offset 7, -4
 347 0002 83B0     		sub	sp, sp, #12
 348              		.cfi_def_cfa_offset 16
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 351 0006 0346     		mov	r3, r0
 352 0008 FB71     		strb	r3, [r7, #7]
 513:.\Generated_Source\PSoC5/PWM_1.c **** 		#if(PWM_1_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/PWM_1.c **** 			CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 353              		.loc 1 514 0
 354 000a 044B     		ldr	r3, .L18
 355 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 356 000e 92B2     		uxth	r2, r2
 357 0010 1A80     		strh	r2, [r3]	@ movhi
 515:.\Generated_Source\PSoC5/PWM_1.c **** 		#else
 516:.\Generated_Source\PSoC5/PWM_1.c **** 	        CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);	
 517:.\Generated_Source\PSoC5/PWM_1.c **** 		#endif /* (PWM_1_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/PWM_1.c ****         
 519:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 520:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/PWM_1.c ****     			CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 522:.\Generated_Source\PSoC5/PWM_1.c ****     		#else
 523:.\Generated_Source\PSoC5/PWM_1.c ****     	        CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));	
 524:.\Generated_Source\PSoC5/PWM_1.c ****     		#endif /* (PWM_1_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 526:.\Generated_Source\PSoC5/PWM_1.c ****     }
 358              		.loc 1 526 0
 359 0012 0C37     		adds	r7, r7, #12
 360 0014 BD46     		mov	sp, r7
 361              		@ sp needed
 362 0016 5DF8047B 		ldr	r7, [sp], #4
 363 001a 7047     		bx	lr
 364              	.L19:
 365              		.align	2
 366              	.L18:
 367 001c 064F0040 		.word	1073762054
 368              		.cfi_endproc
 369              	.LFE5:
 370              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 371              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 372              		.align	2
 373              		.global	PWM_1_SetInterruptMode
 374              		.thumb
 375              		.thumb_func
 376              		.type	PWM_1_SetInterruptMode, %function
 377              	PWM_1_SetInterruptMode:
 378              	.LFB6:
 527:.\Generated_Source\PSoC5/PWM_1.c **** 
 528:.\Generated_Source\PSoC5/PWM_1.c **** 
 529:.\Generated_Source\PSoC5/PWM_1.c **** #else
 530:.\Generated_Source\PSoC5/PWM_1.c **** 
 531:.\Generated_Source\PSoC5/PWM_1.c **** 
 532:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 533:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 534:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 17


 535:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 536:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 537:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will 
 538:.\Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be 
 539:.\Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or 
 540:.\Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 541:.\Generated_Source\PSoC5/PWM_1.c ****     *
 542:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 543:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.  
 544:.\Generated_Source\PSoC5/PWM_1.c ****     *
 545:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 546:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 547:.\Generated_Source\PSoC5/PWM_1.c ****     *
 548:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 549:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 550:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 551:.\Generated_Source\PSoC5/PWM_1.c ****     {
 552:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 553:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 554:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 555:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 556:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 557:.\Generated_Source\PSoC5/PWM_1.c ****     }
 558:.\Generated_Source\PSoC5/PWM_1.c **** 
 559:.\Generated_Source\PSoC5/PWM_1.c **** 
 560:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 561:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 562:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 563:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 564:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 565:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.  
 566:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.  
 567:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is 
 568:.\Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the 
 569:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 570:.\Generated_Source\PSoC5/PWM_1.c ****     *
 571:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 572:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.  
 573:.\Generated_Source\PSoC5/PWM_1.c ****     *
 574:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 575:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 576:.\Generated_Source\PSoC5/PWM_1.c ****     *
 577:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 578:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 579:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 580:.\Generated_Source\PSoC5/PWM_1.c ****     {
 581:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 582:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 583:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 584:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
 585:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 586:.\Generated_Source\PSoC5/PWM_1.c ****     }
 587:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 588:.\Generated_Source\PSoC5/PWM_1.c **** 
 589:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 590:.\Generated_Source\PSoC5/PWM_1.c **** 
 591:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 18


 592:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 593:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 594:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 595:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 596:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 597:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 598:.\Generated_Source\PSoC5/PWM_1.c ****     *
 599:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 600:.\Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time 
 601:.\Generated_Source\PSoC5/PWM_1.c ****     *
 602:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 603:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 604:.\Generated_Source\PSoC5/PWM_1.c ****     *
 605:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 606:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 607:.\Generated_Source\PSoC5/PWM_1.c ****     {
 608:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 609:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 610:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 611:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 612:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */        
 613:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 614:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 615:.\Generated_Source\PSoC5/PWM_1.c ****             
 616:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 617:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)        
 618:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) & 
 619:.\Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 620:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 621:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;        
 622:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 623:.\Generated_Source\PSoC5/PWM_1.c ****         
 624:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 625:.\Generated_Source\PSoC5/PWM_1.c ****     }
 626:.\Generated_Source\PSoC5/PWM_1.c **** 
 627:.\Generated_Source\PSoC5/PWM_1.c **** 
 628:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 629:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 630:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 631:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 632:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 633:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 634:.\Generated_Source\PSoC5/PWM_1.c ****     *
 635:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 636:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 637:.\Generated_Source\PSoC5/PWM_1.c ****     *
 638:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 639:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 640:.\Generated_Source\PSoC5/PWM_1.c ****     *
 641:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 642:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 643:.\Generated_Source\PSoC5/PWM_1.c ****     {
 644:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 645:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 646:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 647:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 648:.\Generated_Source\PSoC5/PWM_1.c ****         
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 19


 649:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 650:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)      
 651:.\Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >> 
 652:.\Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 653:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 654:.\Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 655:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 656:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 657:.\Generated_Source\PSoC5/PWM_1.c ****     }
 658:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 659:.\Generated_Source\PSoC5/PWM_1.c **** 
 660:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 661:.\Generated_Source\PSoC5/PWM_1.c **** 
 662:.\Generated_Source\PSoC5/PWM_1.c **** 
 663:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 664:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 665:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 666:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 667:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 668:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt 
 669:.\Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 670:.\Generated_Source\PSoC5/PWM_1.c ****     *
 671:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 672:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled 
 673:.\Generated_Source\PSoC5/PWM_1.c ****     *
 674:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 675:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 676:.\Generated_Source\PSoC5/PWM_1.c ****     *
 677:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 678:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode)  
 679:.\Generated_Source\PSoC5/PWM_1.c ****     {
 379              		.loc 1 679 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 0002 83B0     		sub	sp, sp, #12
 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 391 0006 0346     		mov	r3, r0
 392 0008 FB71     		strb	r3, [r7, #7]
 680:.\Generated_Source\PSoC5/PWM_1.c ****     	CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 393              		.loc 1 680 0
 394 000a 044B     		ldr	r3, .L21
 395 000c FA79     		ldrb	r2, [r7, #7]
 396 000e 1A70     		strb	r2, [r3]
 681:.\Generated_Source\PSoC5/PWM_1.c ****     }
 397              		.loc 1 681 0
 398 0010 0C37     		adds	r7, r7, #12
 399 0012 BD46     		mov	sp, r7
 400              		@ sp needed
 401 0014 5DF8047B 		ldr	r7, [sp], #4
 402 0018 7047     		bx	lr
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 20


 403              	.L22:
 404 001a 00BF     		.align	2
 405              	.L21:
 406 001c 034F0040 		.word	1073762051
 407              		.cfi_endproc
 408              	.LFE6:
 409              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 410              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 411              		.align	2
 412              		.global	PWM_1_ReadStatusRegister
 413              		.thumb
 414              		.thumb_func
 415              		.type	PWM_1_ReadStatusRegister, %function
 416              	PWM_1_ReadStatusRegister:
 417              	.LFB7:
 682:.\Generated_Source\PSoC5/PWM_1.c **** 
 683:.\Generated_Source\PSoC5/PWM_1.c **** 
 684:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 685:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 686:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 687:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 688:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 689:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register. 
 690:.\Generated_Source\PSoC5/PWM_1.c ****     *
 691:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 692:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 693:.\Generated_Source\PSoC5/PWM_1.c ****     *
 694:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 695:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 696:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 697:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 698:.\Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 699:.\Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 700:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 701:.\Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 702:.\Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 703:.\Generated_Source\PSoC5/PWM_1.c ****     *
 704:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 705:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void)   
 706:.\Generated_Source\PSoC5/PWM_1.c ****     {
 418              		.loc 1 706 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 8
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423 0000 80B4     		push	{r7}
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 83B0     		sub	sp, sp, #12
 427              		.cfi_def_cfa_offset 16
 428 0004 00AF     		add	r7, sp, #0
 429              		.cfi_def_cfa_register 7
 707:.\Generated_Source\PSoC5/PWM_1.c ****     	uint8 result;
 708:.\Generated_Source\PSoC5/PWM_1.c ****     	
 709:.\Generated_Source\PSoC5/PWM_1.c ****     	result = CY_GET_REG8(PWM_1_STATUS_PTR);
 430              		.loc 1 709 0
 431 0006 054B     		ldr	r3, .L25
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 21


 432 0008 1B78     		ldrb	r3, [r3]
 433 000a FB71     		strb	r3, [r7, #7]
 710:.\Generated_Source\PSoC5/PWM_1.c ****     	return (result);
 434              		.loc 1 710 0
 435 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 711:.\Generated_Source\PSoC5/PWM_1.c ****     }
 436              		.loc 1 711 0
 437 000e 1846     		mov	r0, r3
 438 0010 0C37     		adds	r7, r7, #12
 439 0012 BD46     		mov	sp, r7
 440              		@ sp needed
 441 0014 5DF8047B 		ldr	r7, [sp], #4
 442 0018 7047     		bx	lr
 443              	.L26:
 444 001a 00BF     		.align	2
 445              	.L25:
 446 001c 034F0040 		.word	1073762051
 447              		.cfi_endproc
 448              	.LFE7:
 449              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 450              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 451              		.align	2
 452              		.global	PWM_1_ReadControlRegister
 453              		.thumb
 454              		.thumb_func
 455              		.type	PWM_1_ReadControlRegister, %function
 456              	PWM_1_ReadControlRegister:
 457              	.LFB8:
 712:.\Generated_Source\PSoC5/PWM_1.c **** 
 713:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 714:.\Generated_Source\PSoC5/PWM_1.c **** 
 715:.\Generated_Source\PSoC5/PWM_1.c **** 
 716:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 717:.\Generated_Source\PSoC5/PWM_1.c **** 
 718:.\Generated_Source\PSoC5/PWM_1.c **** 
 719:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 720:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 721:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 722:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 723:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 724:.\Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available 
 725:.\Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 726:.\Generated_Source\PSoC5/PWM_1.c ****     *
 727:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 728:.\Generated_Source\PSoC5/PWM_1.c ****     *  None 
 729:.\Generated_Source\PSoC5/PWM_1.c ****     *
 730:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 731:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 732:.\Generated_Source\PSoC5/PWM_1.c ****     *
 733:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/    
 734:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 735:.\Generated_Source\PSoC5/PWM_1.c ****     {
 458              		.loc 1 735 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462              		@ link register save eliminated.
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 22


 463 0000 80B4     		push	{r7}
 464              		.cfi_def_cfa_offset 4
 465              		.cfi_offset 7, -4
 466 0002 83B0     		sub	sp, sp, #12
 467              		.cfi_def_cfa_offset 16
 468 0004 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 736:.\Generated_Source\PSoC5/PWM_1.c ****     	uint8 result;
 737:.\Generated_Source\PSoC5/PWM_1.c ****     	
 738:.\Generated_Source\PSoC5/PWM_1.c ****     	result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 470              		.loc 1 738 0
 471 0006 054B     		ldr	r3, .L29
 472 0008 1B78     		ldrb	r3, [r3]
 473 000a FB71     		strb	r3, [r7, #7]
 739:.\Generated_Source\PSoC5/PWM_1.c ****     	return (result);
 474              		.loc 1 739 0
 475 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 740:.\Generated_Source\PSoC5/PWM_1.c ****     }
 476              		.loc 1 740 0
 477 000e 1846     		mov	r0, r3
 478 0010 0C37     		adds	r7, r7, #12
 479 0012 BD46     		mov	sp, r7
 480              		@ sp needed
 481 0014 5DF8047B 		ldr	r7, [sp], #4
 482 0018 7047     		bx	lr
 483              	.L30:
 484 001a 00BF     		.align	2
 485              	.L29:
 486 001c 004F0040 		.word	1073762048
 487              		.cfi_endproc
 488              	.LFE8:
 489              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 490              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 491              		.align	2
 492              		.global	PWM_1_WriteControlRegister
 493              		.thumb
 494              		.thumb_func
 495              		.type	PWM_1_WriteControlRegister, %function
 496              	PWM_1_WriteControlRegister:
 497              	.LFB9:
 741:.\Generated_Source\PSoC5/PWM_1.c **** 
 742:.\Generated_Source\PSoC5/PWM_1.c **** 
 743:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 744:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 745:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 746:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 747:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 748:.\Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if 
 749:.\Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 750:.\Generated_Source\PSoC5/PWM_1.c ****     *
 751:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 752:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 753:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 754:.\Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 755:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 756:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 757:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 23


 758:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 759:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 760:.\Generated_Source\PSoC5/PWM_1.c ****     *
 761:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 762:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 763:.\Generated_Source\PSoC5/PWM_1.c ****     {
 498              		.loc 1 763 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 8
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503 0000 80B4     		push	{r7}
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 7, -4
 506 0002 83B0     		sub	sp, sp, #12
 507              		.cfi_def_cfa_offset 16
 508 0004 00AF     		add	r7, sp, #0
 509              		.cfi_def_cfa_register 7
 510 0006 0346     		mov	r3, r0
 511 0008 FB71     		strb	r3, [r7, #7]
 764:.\Generated_Source\PSoC5/PWM_1.c ****     	CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 512              		.loc 1 764 0
 513 000a 044B     		ldr	r3, .L32
 514 000c FA79     		ldrb	r2, [r7, #7]
 515 000e 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/PWM_1.c ****     }
 516              		.loc 1 765 0
 517 0010 0C37     		adds	r7, r7, #12
 518 0012 BD46     		mov	sp, r7
 519              		@ sp needed
 520 0014 5DF8047B 		ldr	r7, [sp], #4
 521 0018 7047     		bx	lr
 522              	.L33:
 523 001a 00BF     		.align	2
 524              	.L32:
 525 001c 004F0040 		.word	1073762048
 526              		.cfi_endproc
 527              	.LFE9:
 528              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 529              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 530              		.align	2
 531              		.global	PWM_1_ReadCompare
 532              		.thumb
 533              		.thumb_func
 534              		.type	PWM_1_ReadCompare, %function
 535              	PWM_1_ReadCompare:
 536              	.LFB10:
 766:.\Generated_Source\PSoC5/PWM_1.c **** 	
 767:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 768:.\Generated_Source\PSoC5/PWM_1.c **** 
 769:.\Generated_Source\PSoC5/PWM_1.c **** 
 770:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 771:.\Generated_Source\PSoC5/PWM_1.c **** 
 772:.\Generated_Source\PSoC5/PWM_1.c **** 
 773:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 775:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 24


 776:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 777:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 778:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 779:.\Generated_Source\PSoC5/PWM_1.c ****     *
 780:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 781:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 782:.\Generated_Source\PSoC5/PWM_1.c ****     *
 783:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 784:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 785:.\Generated_Source\PSoC5/PWM_1.c ****     *
 786:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 787:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCapture(void)  
 788:.\Generated_Source\PSoC5/PWM_1.c ****     {
 789:.\Generated_Source\PSoC5/PWM_1.c ****     	return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 790:.\Generated_Source\PSoC5/PWM_1.c ****     }
 791:.\Generated_Source\PSoC5/PWM_1.c **** 	
 792:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 793:.\Generated_Source\PSoC5/PWM_1.c **** 
 794:.\Generated_Source\PSoC5/PWM_1.c **** 
 795:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 796:.\Generated_Source\PSoC5/PWM_1.c **** 
 797:.\Generated_Source\PSoC5/PWM_1.c **** 
 798:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 799:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 800:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 801:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 802:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 803:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is 
 804:.\Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 805:.\Generated_Source\PSoC5/PWM_1.c ****     *
 806:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 807:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 808:.\Generated_Source\PSoC5/PWM_1.c ****     *
 809:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 810:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 811:.\Generated_Source\PSoC5/PWM_1.c ****     *
 812:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 813:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare(void)  
 814:.\Generated_Source\PSoC5/PWM_1.c ****     {
 537              		.loc 1 814 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542 0000 80B4     		push	{r7}
 543              		.cfi_def_cfa_offset 4
 544              		.cfi_offset 7, -4
 545 0002 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 815:.\Generated_Source\PSoC5/PWM_1.c **** 		#if(PWM_1_UsingFixedFunction)
 816:.\Generated_Source\PSoC5/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 547              		.loc 1 816 0
 548 0004 044B     		ldr	r3, .L36
 549 0006 1B88     		ldrh	r3, [r3]	@ movhi
 550 0008 9BB2     		uxth	r3, r3
 551 000a DBB2     		uxtb	r3, r3
 817:.\Generated_Source\PSoC5/PWM_1.c ****         #else
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 25


 818:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 819:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 820:.\Generated_Source\PSoC5/PWM_1.c ****     }
 552              		.loc 1 820 0
 553 000c 1846     		mov	r0, r3
 554 000e BD46     		mov	sp, r7
 555              		@ sp needed
 556 0010 5DF8047B 		ldr	r7, [sp], #4
 557 0014 7047     		bx	lr
 558              	.L37:
 559 0016 00BF     		.align	2
 560              	.L36:
 561 0018 064F0040 		.word	1073762054
 562              		.cfi_endproc
 563              	.LFE10:
 564              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 565              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_1_ReadPeriod
 568              		.thumb
 569              		.thumb_func
 570              		.type	PWM_1_ReadPeriod, %function
 571              	PWM_1_ReadPeriod:
 572              	.LFB11:
 821:.\Generated_Source\PSoC5/PWM_1.c **** 
 822:.\Generated_Source\PSoC5/PWM_1.c **** #else
 823:.\Generated_Source\PSoC5/PWM_1.c **** 
 824:.\Generated_Source\PSoC5/PWM_1.c **** 
 825:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 826:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 827:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 828:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 829:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 830:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 831:.\Generated_Source\PSoC5/PWM_1.c ****     *
 832:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 833:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 834:.\Generated_Source\PSoC5/PWM_1.c ****     *
 835:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 836:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 837:.\Generated_Source\PSoC5/PWM_1.c ****     *
 838:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 839:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 840:.\Generated_Source\PSoC5/PWM_1.c ****     {
 841:.\Generated_Source\PSoC5/PWM_1.c **** 		return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 842:.\Generated_Source\PSoC5/PWM_1.c ****     }
 843:.\Generated_Source\PSoC5/PWM_1.c **** 
 844:.\Generated_Source\PSoC5/PWM_1.c **** 
 845:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 846:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 847:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 848:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 849:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 850:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 851:.\Generated_Source\PSoC5/PWM_1.c ****     *
 852:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 853:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 26


 854:.\Generated_Source\PSoC5/PWM_1.c ****     *
 855:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 856:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 857:.\Generated_Source\PSoC5/PWM_1.c ****     *
 858:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 859:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void)  
 860:.\Generated_Source\PSoC5/PWM_1.c ****     {
 861:.\Generated_Source\PSoC5/PWM_1.c **** 		return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 862:.\Generated_Source\PSoC5/PWM_1.c ****     }
 863:.\Generated_Source\PSoC5/PWM_1.c **** 
 864:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 865:.\Generated_Source\PSoC5/PWM_1.c **** 
 866:.\Generated_Source\PSoC5/PWM_1.c **** 
 867:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 868:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 869:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 870:.\Generated_Source\PSoC5/PWM_1.c **** * 
 871:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 872:.\Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 873:.\Generated_Source\PSoC5/PWM_1.c **** *
 874:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 875:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 876:.\Generated_Source\PSoC5/PWM_1.c **** *
 877:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 878:.\Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 879:.\Generated_Source\PSoC5/PWM_1.c **** *
 880:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/ 
 881:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 882:.\Generated_Source\PSoC5/PWM_1.c **** {
 573              		.loc 1 882 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 0000 80B4     		push	{r7}
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 883:.\Generated_Source\PSoC5/PWM_1.c **** 	#if(PWM_1_UsingFixedFunction)
 884:.\Generated_Source\PSoC5/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 583              		.loc 1 884 0
 584 0004 044B     		ldr	r3, .L40
 585 0006 1B88     		ldrh	r3, [r3]	@ movhi
 586 0008 9BB2     		uxth	r3, r3
 587 000a DBB2     		uxtb	r3, r3
 885:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 886:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 887:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 888:.\Generated_Source\PSoC5/PWM_1.c **** }
 588              		.loc 1 888 0
 589 000c 1846     		mov	r0, r3
 590 000e BD46     		mov	sp, r7
 591              		@ sp needed
 592 0010 5DF8047B 		ldr	r7, [sp], #4
 593 0014 7047     		bx	lr
 594              	.L41:
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 27


 595 0016 00BF     		.align	2
 596              	.L40:
 597 0018 044F0040 		.word	1073762052
 598              		.cfi_endproc
 599              	.LFE11:
 600              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 601              		.text
 602              	.Letext0:
 603              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 604              		.section	.debug_info,"",%progbits
 605              	.Ldebug_info0:
 606 0000 3A020000 		.4byte	0x23a
 607 0004 0400     		.2byte	0x4
 608 0006 00000000 		.4byte	.Ldebug_abbrev0
 609 000a 04       		.byte	0x4
 610 000b 01       		.uleb128 0x1
 611 000c 47010000 		.4byte	.LASF35
 612 0010 01       		.byte	0x1
 613 0011 2D000000 		.4byte	.LASF36
 614 0015 C3010000 		.4byte	.LASF37
 615 0019 00000000 		.4byte	.Ldebug_ranges0+0
 616 001d 00000000 		.4byte	0
 617 0021 00000000 		.4byte	.Ldebug_line0
 618 0025 02       		.uleb128 0x2
 619 0026 01       		.byte	0x1
 620 0027 06       		.byte	0x6
 621 0028 76020000 		.4byte	.LASF0
 622 002c 02       		.uleb128 0x2
 623 002d 01       		.byte	0x1
 624 002e 08       		.byte	0x8
 625 002f 88000000 		.4byte	.LASF1
 626 0033 02       		.uleb128 0x2
 627 0034 02       		.byte	0x2
 628 0035 05       		.byte	0x5
 629 0036 4E020000 		.4byte	.LASF2
 630 003a 02       		.uleb128 0x2
 631 003b 02       		.byte	0x2
 632 003c 07       		.byte	0x7
 633 003d 1A000000 		.4byte	.LASF3
 634 0041 02       		.uleb128 0x2
 635 0042 04       		.byte	0x4
 636 0043 05       		.byte	0x5
 637 0044 68020000 		.4byte	.LASF4
 638 0048 02       		.uleb128 0x2
 639 0049 04       		.byte	0x4
 640 004a 07       		.byte	0x7
 641 004b AC000000 		.4byte	.LASF5
 642 004f 02       		.uleb128 0x2
 643 0050 08       		.byte	0x8
 644 0051 05       		.byte	0x5
 645 0052 06020000 		.4byte	.LASF6
 646 0056 02       		.uleb128 0x2
 647 0057 08       		.byte	0x8
 648 0058 07       		.byte	0x7
 649 0059 29010000 		.4byte	.LASF7
 650 005d 03       		.uleb128 0x3
 651 005e 04       		.byte	0x4
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 28


 652 005f 05       		.byte	0x5
 653 0060 696E7400 		.ascii	"int\000"
 654 0064 02       		.uleb128 0x2
 655 0065 04       		.byte	0x4
 656 0066 07       		.byte	0x7
 657 0067 1C010000 		.4byte	.LASF8
 658 006b 04       		.uleb128 0x4
 659 006c BE000000 		.4byte	.LASF9
 660 0070 02       		.byte	0x2
 661 0071 5B       		.byte	0x5b
 662 0072 2C000000 		.4byte	0x2c
 663 0076 04       		.uleb128 0x4
 664 0077 0A010000 		.4byte	.LASF10
 665 007b 02       		.byte	0x2
 666 007c 5C       		.byte	0x5c
 667 007d 3A000000 		.4byte	0x3a
 668 0081 02       		.uleb128 0x2
 669 0082 04       		.byte	0x4
 670 0083 04       		.byte	0x4
 671 0084 67000000 		.4byte	.LASF11
 672 0088 02       		.uleb128 0x2
 673 0089 08       		.byte	0x8
 674 008a 04       		.byte	0x4
 675 008b F5000000 		.4byte	.LASF12
 676 008f 02       		.uleb128 0x2
 677 0090 01       		.byte	0x1
 678 0091 08       		.byte	0x8
 679 0092 71020000 		.4byte	.LASF13
 680 0096 04       		.uleb128 0x4
 681 0097 96000000 		.4byte	.LASF14
 682 009b 02       		.byte	0x2
 683 009c F0       		.byte	0xf0
 684 009d A1000000 		.4byte	0xa1
 685 00a1 05       		.uleb128 0x5
 686 00a2 6B000000 		.4byte	0x6b
 687 00a6 04       		.uleb128 0x4
 688 00a7 00000000 		.4byte	.LASF15
 689 00ab 02       		.byte	0x2
 690 00ac F1       		.byte	0xf1
 691 00ad B1000000 		.4byte	0xb1
 692 00b1 05       		.uleb128 0x5
 693 00b2 76000000 		.4byte	0x76
 694 00b6 02       		.uleb128 0x2
 695 00b7 04       		.byte	0x4
 696 00b8 07       		.byte	0x7
 697 00b9 EA010000 		.4byte	.LASF16
 698 00bd 06       		.uleb128 0x6
 699 00be 8A020000 		.4byte	.LASF17
 700 00c2 01       		.byte	0x1
 701 00c3 32       		.byte	0x32
 702 00c4 00000000 		.4byte	.LFB0
 703 00c8 20000000 		.4byte	.LFE0-.LFB0
 704 00cc 01       		.uleb128 0x1
 705 00cd 9C       		.byte	0x9c
 706 00ce 07       		.uleb128 0x7
 707 00cf 11010000 		.4byte	.LASF20
 708 00d3 01       		.byte	0x1
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 29


 709 00d4 4F       		.byte	0x4f
 710 00d5 00000000 		.4byte	.LFB1
 711 00d9 BC000000 		.4byte	.LFE1-.LFB1
 712 00dd 01       		.uleb128 0x1
 713 00de 9C       		.byte	0x9c
 714 00df F2000000 		.4byte	0xf2
 715 00e3 08       		.uleb128 0x8
 716 00e4 58020000 		.4byte	.LASF27
 717 00e8 01       		.byte	0x1
 718 00e9 52       		.byte	0x52
 719 00ea 6B000000 		.4byte	0x6b
 720 00ee 02       		.uleb128 0x2
 721 00ef 91       		.byte	0x91
 722 00f0 77       		.sleb128 -9
 723 00f1 00       		.byte	0
 724 00f2 09       		.uleb128 0x9
 725 00f3 06000000 		.4byte	.LASF18
 726 00f7 01       		.byte	0x1
 727 00f8 C1       		.byte	0xc1
 728 00f9 00000000 		.4byte	.LFB2
 729 00fd 48000000 		.4byte	.LFE2-.LFB2
 730 0101 01       		.uleb128 0x1
 731 0102 9C       		.byte	0x9c
 732 0103 09       		.uleb128 0x9
 733 0104 5D020000 		.4byte	.LASF19
 734 0108 01       		.byte	0x1
 735 0109 E3       		.byte	0xe3
 736 010a 00000000 		.4byte	.LFB3
 737 010e 48000000 		.4byte	.LFE3-.LFB3
 738 0112 01       		.uleb128 0x1
 739 0113 9C       		.byte	0x9c
 740 0114 0A       		.uleb128 0xa
 741 0115 3C020000 		.4byte	.LASF21
 742 0119 01       		.byte	0x1
 743 011a DC01     		.2byte	0x1dc
 744 011c 00000000 		.4byte	.LFB4
 745 0120 20000000 		.4byte	.LFE4-.LFB4
 746 0124 01       		.uleb128 0x1
 747 0125 9C       		.byte	0x9c
 748 0126 3A010000 		.4byte	0x13a
 749 012a 0B       		.uleb128 0xb
 750 012b 13000000 		.4byte	.LASF23
 751 012f 01       		.byte	0x1
 752 0130 DC01     		.2byte	0x1dc
 753 0132 6B000000 		.4byte	0x6b
 754 0136 02       		.uleb128 0x2
 755 0137 91       		.byte	0x91
 756 0138 77       		.sleb128 -9
 757 0139 00       		.byte	0
 758 013a 0A       		.uleb128 0xa
 759 013b F3010000 		.4byte	.LASF22
 760 013f 01       		.byte	0x1
 761 0140 FE01     		.2byte	0x1fe
 762 0142 00000000 		.4byte	.LFB5
 763 0146 20000000 		.4byte	.LFE5-.LFB5
 764 014a 01       		.uleb128 0x1
 765 014b 9C       		.byte	0x9c
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 30


 766 014c 60010000 		.4byte	0x160
 767 0150 0B       		.uleb128 0xb
 768 0151 82020000 		.4byte	.LASF24
 769 0155 01       		.byte	0x1
 770 0156 FE01     		.2byte	0x1fe
 771 0158 6B000000 		.4byte	0x6b
 772 015c 02       		.uleb128 0x2
 773 015d 91       		.byte	0x91
 774 015e 77       		.sleb128 -9
 775 015f 00       		.byte	0
 776 0160 0A       		.uleb128 0xa
 777 0161 CC000000 		.4byte	.LASF25
 778 0165 01       		.byte	0x1
 779 0166 A602     		.2byte	0x2a6
 780 0168 00000000 		.4byte	.LFB6
 781 016c 20000000 		.4byte	.LFE6-.LFB6
 782 0170 01       		.uleb128 0x1
 783 0171 9C       		.byte	0x9c
 784 0172 86010000 		.4byte	0x186
 785 0176 0B       		.uleb128 0xb
 786 0177 2E020000 		.4byte	.LASF26
 787 017b 01       		.byte	0x1
 788 017c A602     		.2byte	0x2a6
 789 017e 6B000000 		.4byte	0x6b
 790 0182 02       		.uleb128 0x2
 791 0183 91       		.byte	0x91
 792 0184 77       		.sleb128 -9
 793 0185 00       		.byte	0
 794 0186 0C       		.uleb128 0xc
 795 0187 4E000000 		.4byte	.LASF29
 796 018b 01       		.byte	0x1
 797 018c C102     		.2byte	0x2c1
 798 018e 6B000000 		.4byte	0x6b
 799 0192 00000000 		.4byte	.LFB7
 800 0196 20000000 		.4byte	.LFE7-.LFB7
 801 019a 01       		.uleb128 0x1
 802 019b 9C       		.byte	0x9c
 803 019c B0010000 		.4byte	0x1b0
 804 01a0 0D       		.uleb128 0xd
 805 01a1 40010000 		.4byte	.LASF28
 806 01a5 01       		.byte	0x1
 807 01a6 C302     		.2byte	0x2c3
 808 01a8 6B000000 		.4byte	0x6b
 809 01ac 02       		.uleb128 0x2
 810 01ad 91       		.byte	0x91
 811 01ae 77       		.sleb128 -9
 812 01af 00       		.byte	0
 813 01b0 0C       		.uleb128 0xc
 814 01b1 14020000 		.4byte	.LASF30
 815 01b5 01       		.byte	0x1
 816 01b6 DE02     		.2byte	0x2de
 817 01b8 6B000000 		.4byte	0x6b
 818 01bc 00000000 		.4byte	.LFB8
 819 01c0 20000000 		.4byte	.LFE8-.LFB8
 820 01c4 01       		.uleb128 0x1
 821 01c5 9C       		.byte	0x9c
 822 01c6 DA010000 		.4byte	0x1da
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 31


 823 01ca 0D       		.uleb128 0xd
 824 01cb 40010000 		.4byte	.LASF28
 825 01cf 01       		.byte	0x1
 826 01d0 E002     		.2byte	0x2e0
 827 01d2 6B000000 		.4byte	0x6b
 828 01d6 02       		.uleb128 0x2
 829 01d7 91       		.byte	0x91
 830 01d8 77       		.sleb128 -9
 831 01d9 00       		.byte	0
 832 01da 0A       		.uleb128 0xa
 833 01db 6D000000 		.4byte	.LASF31
 834 01df 01       		.byte	0x1
 835 01e0 FA02     		.2byte	0x2fa
 836 01e2 00000000 		.4byte	.LFB9
 837 01e6 20000000 		.4byte	.LFE9-.LFB9
 838 01ea 01       		.uleb128 0x1
 839 01eb 9C       		.byte	0x9c
 840 01ec 00020000 		.4byte	0x200
 841 01f0 0B       		.uleb128 0xb
 842 01f1 C4000000 		.4byte	.LASF32
 843 01f5 01       		.byte	0x1
 844 01f6 FA02     		.2byte	0x2fa
 845 01f8 6B000000 		.4byte	0x6b
 846 01fc 02       		.uleb128 0x2
 847 01fd 91       		.byte	0x91
 848 01fe 77       		.sleb128 -9
 849 01ff 00       		.byte	0
 850 0200 0E       		.uleb128 0xe
 851 0201 E3000000 		.4byte	.LASF33
 852 0205 01       		.byte	0x1
 853 0206 2D03     		.2byte	0x32d
 854 0208 6B000000 		.4byte	0x6b
 855 020c 00000000 		.4byte	.LFB10
 856 0210 1C000000 		.4byte	.LFE10-.LFB10
 857 0214 01       		.uleb128 0x1
 858 0215 9C       		.byte	0x9c
 859 0216 0E       		.uleb128 0xe
 860 0217 9B000000 		.4byte	.LASF34
 861 021b 01       		.byte	0x1
 862 021c 7103     		.2byte	0x371
 863 021e 6B000000 		.4byte	0x6b
 864 0222 00000000 		.4byte	.LFB11
 865 0226 1C000000 		.4byte	.LFE11-.LFB11
 866 022a 01       		.uleb128 0x1
 867 022b 9C       		.byte	0x9c
 868 022c 0F       		.uleb128 0xf
 869 022d FC000000 		.4byte	.LASF38
 870 0231 01       		.byte	0x1
 871 0232 1B       		.byte	0x1b
 872 0233 6B000000 		.4byte	0x6b
 873 0237 05       		.uleb128 0x5
 874 0238 03       		.byte	0x3
 875 0239 00000000 		.4byte	PWM_1_initVar
 876 023d 00       		.byte	0
 877              		.section	.debug_abbrev,"",%progbits
 878              	.Ldebug_abbrev0:
 879 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 32


 880 0001 11       		.uleb128 0x11
 881 0002 01       		.byte	0x1
 882 0003 25       		.uleb128 0x25
 883 0004 0E       		.uleb128 0xe
 884 0005 13       		.uleb128 0x13
 885 0006 0B       		.uleb128 0xb
 886 0007 03       		.uleb128 0x3
 887 0008 0E       		.uleb128 0xe
 888 0009 1B       		.uleb128 0x1b
 889 000a 0E       		.uleb128 0xe
 890 000b 55       		.uleb128 0x55
 891 000c 17       		.uleb128 0x17
 892 000d 11       		.uleb128 0x11
 893 000e 01       		.uleb128 0x1
 894 000f 10       		.uleb128 0x10
 895 0010 17       		.uleb128 0x17
 896 0011 00       		.byte	0
 897 0012 00       		.byte	0
 898 0013 02       		.uleb128 0x2
 899 0014 24       		.uleb128 0x24
 900 0015 00       		.byte	0
 901 0016 0B       		.uleb128 0xb
 902 0017 0B       		.uleb128 0xb
 903 0018 3E       		.uleb128 0x3e
 904 0019 0B       		.uleb128 0xb
 905 001a 03       		.uleb128 0x3
 906 001b 0E       		.uleb128 0xe
 907 001c 00       		.byte	0
 908 001d 00       		.byte	0
 909 001e 03       		.uleb128 0x3
 910 001f 24       		.uleb128 0x24
 911 0020 00       		.byte	0
 912 0021 0B       		.uleb128 0xb
 913 0022 0B       		.uleb128 0xb
 914 0023 3E       		.uleb128 0x3e
 915 0024 0B       		.uleb128 0xb
 916 0025 03       		.uleb128 0x3
 917 0026 08       		.uleb128 0x8
 918 0027 00       		.byte	0
 919 0028 00       		.byte	0
 920 0029 04       		.uleb128 0x4
 921 002a 16       		.uleb128 0x16
 922 002b 00       		.byte	0
 923 002c 03       		.uleb128 0x3
 924 002d 0E       		.uleb128 0xe
 925 002e 3A       		.uleb128 0x3a
 926 002f 0B       		.uleb128 0xb
 927 0030 3B       		.uleb128 0x3b
 928 0031 0B       		.uleb128 0xb
 929 0032 49       		.uleb128 0x49
 930 0033 13       		.uleb128 0x13
 931 0034 00       		.byte	0
 932 0035 00       		.byte	0
 933 0036 05       		.uleb128 0x5
 934 0037 35       		.uleb128 0x35
 935 0038 00       		.byte	0
 936 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 33


 937 003a 13       		.uleb128 0x13
 938 003b 00       		.byte	0
 939 003c 00       		.byte	0
 940 003d 06       		.uleb128 0x6
 941 003e 2E       		.uleb128 0x2e
 942 003f 00       		.byte	0
 943 0040 3F       		.uleb128 0x3f
 944 0041 19       		.uleb128 0x19
 945 0042 03       		.uleb128 0x3
 946 0043 0E       		.uleb128 0xe
 947 0044 3A       		.uleb128 0x3a
 948 0045 0B       		.uleb128 0xb
 949 0046 3B       		.uleb128 0x3b
 950 0047 0B       		.uleb128 0xb
 951 0048 27       		.uleb128 0x27
 952 0049 19       		.uleb128 0x19
 953 004a 11       		.uleb128 0x11
 954 004b 01       		.uleb128 0x1
 955 004c 12       		.uleb128 0x12
 956 004d 06       		.uleb128 0x6
 957 004e 40       		.uleb128 0x40
 958 004f 18       		.uleb128 0x18
 959 0050 9642     		.uleb128 0x2116
 960 0052 19       		.uleb128 0x19
 961 0053 00       		.byte	0
 962 0054 00       		.byte	0
 963 0055 07       		.uleb128 0x7
 964 0056 2E       		.uleb128 0x2e
 965 0057 01       		.byte	0x1
 966 0058 3F       		.uleb128 0x3f
 967 0059 19       		.uleb128 0x19
 968 005a 03       		.uleb128 0x3
 969 005b 0E       		.uleb128 0xe
 970 005c 3A       		.uleb128 0x3a
 971 005d 0B       		.uleb128 0xb
 972 005e 3B       		.uleb128 0x3b
 973 005f 0B       		.uleb128 0xb
 974 0060 27       		.uleb128 0x27
 975 0061 19       		.uleb128 0x19
 976 0062 11       		.uleb128 0x11
 977 0063 01       		.uleb128 0x1
 978 0064 12       		.uleb128 0x12
 979 0065 06       		.uleb128 0x6
 980 0066 40       		.uleb128 0x40
 981 0067 18       		.uleb128 0x18
 982 0068 9642     		.uleb128 0x2116
 983 006a 19       		.uleb128 0x19
 984 006b 01       		.uleb128 0x1
 985 006c 13       		.uleb128 0x13
 986 006d 00       		.byte	0
 987 006e 00       		.byte	0
 988 006f 08       		.uleb128 0x8
 989 0070 34       		.uleb128 0x34
 990 0071 00       		.byte	0
 991 0072 03       		.uleb128 0x3
 992 0073 0E       		.uleb128 0xe
 993 0074 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 34


 994 0075 0B       		.uleb128 0xb
 995 0076 3B       		.uleb128 0x3b
 996 0077 0B       		.uleb128 0xb
 997 0078 49       		.uleb128 0x49
 998 0079 13       		.uleb128 0x13
 999 007a 02       		.uleb128 0x2
 1000 007b 18       		.uleb128 0x18
 1001 007c 00       		.byte	0
 1002 007d 00       		.byte	0
 1003 007e 09       		.uleb128 0x9
 1004 007f 2E       		.uleb128 0x2e
 1005 0080 00       		.byte	0
 1006 0081 3F       		.uleb128 0x3f
 1007 0082 19       		.uleb128 0x19
 1008 0083 03       		.uleb128 0x3
 1009 0084 0E       		.uleb128 0xe
 1010 0085 3A       		.uleb128 0x3a
 1011 0086 0B       		.uleb128 0xb
 1012 0087 3B       		.uleb128 0x3b
 1013 0088 0B       		.uleb128 0xb
 1014 0089 27       		.uleb128 0x27
 1015 008a 19       		.uleb128 0x19
 1016 008b 11       		.uleb128 0x11
 1017 008c 01       		.uleb128 0x1
 1018 008d 12       		.uleb128 0x12
 1019 008e 06       		.uleb128 0x6
 1020 008f 40       		.uleb128 0x40
 1021 0090 18       		.uleb128 0x18
 1022 0091 9742     		.uleb128 0x2117
 1023 0093 19       		.uleb128 0x19
 1024 0094 00       		.byte	0
 1025 0095 00       		.byte	0
 1026 0096 0A       		.uleb128 0xa
 1027 0097 2E       		.uleb128 0x2e
 1028 0098 01       		.byte	0x1
 1029 0099 3F       		.uleb128 0x3f
 1030 009a 19       		.uleb128 0x19
 1031 009b 03       		.uleb128 0x3
 1032 009c 0E       		.uleb128 0xe
 1033 009d 3A       		.uleb128 0x3a
 1034 009e 0B       		.uleb128 0xb
 1035 009f 3B       		.uleb128 0x3b
 1036 00a0 05       		.uleb128 0x5
 1037 00a1 27       		.uleb128 0x27
 1038 00a2 19       		.uleb128 0x19
 1039 00a3 11       		.uleb128 0x11
 1040 00a4 01       		.uleb128 0x1
 1041 00a5 12       		.uleb128 0x12
 1042 00a6 06       		.uleb128 0x6
 1043 00a7 40       		.uleb128 0x40
 1044 00a8 18       		.uleb128 0x18
 1045 00a9 9742     		.uleb128 0x2117
 1046 00ab 19       		.uleb128 0x19
 1047 00ac 01       		.uleb128 0x1
 1048 00ad 13       		.uleb128 0x13
 1049 00ae 00       		.byte	0
 1050 00af 00       		.byte	0
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 35


 1051 00b0 0B       		.uleb128 0xb
 1052 00b1 05       		.uleb128 0x5
 1053 00b2 00       		.byte	0
 1054 00b3 03       		.uleb128 0x3
 1055 00b4 0E       		.uleb128 0xe
 1056 00b5 3A       		.uleb128 0x3a
 1057 00b6 0B       		.uleb128 0xb
 1058 00b7 3B       		.uleb128 0x3b
 1059 00b8 05       		.uleb128 0x5
 1060 00b9 49       		.uleb128 0x49
 1061 00ba 13       		.uleb128 0x13
 1062 00bb 02       		.uleb128 0x2
 1063 00bc 18       		.uleb128 0x18
 1064 00bd 00       		.byte	0
 1065 00be 00       		.byte	0
 1066 00bf 0C       		.uleb128 0xc
 1067 00c0 2E       		.uleb128 0x2e
 1068 00c1 01       		.byte	0x1
 1069 00c2 3F       		.uleb128 0x3f
 1070 00c3 19       		.uleb128 0x19
 1071 00c4 03       		.uleb128 0x3
 1072 00c5 0E       		.uleb128 0xe
 1073 00c6 3A       		.uleb128 0x3a
 1074 00c7 0B       		.uleb128 0xb
 1075 00c8 3B       		.uleb128 0x3b
 1076 00c9 05       		.uleb128 0x5
 1077 00ca 27       		.uleb128 0x27
 1078 00cb 19       		.uleb128 0x19
 1079 00cc 49       		.uleb128 0x49
 1080 00cd 13       		.uleb128 0x13
 1081 00ce 11       		.uleb128 0x11
 1082 00cf 01       		.uleb128 0x1
 1083 00d0 12       		.uleb128 0x12
 1084 00d1 06       		.uleb128 0x6
 1085 00d2 40       		.uleb128 0x40
 1086 00d3 18       		.uleb128 0x18
 1087 00d4 9742     		.uleb128 0x2117
 1088 00d6 19       		.uleb128 0x19
 1089 00d7 01       		.uleb128 0x1
 1090 00d8 13       		.uleb128 0x13
 1091 00d9 00       		.byte	0
 1092 00da 00       		.byte	0
 1093 00db 0D       		.uleb128 0xd
 1094 00dc 34       		.uleb128 0x34
 1095 00dd 00       		.byte	0
 1096 00de 03       		.uleb128 0x3
 1097 00df 0E       		.uleb128 0xe
 1098 00e0 3A       		.uleb128 0x3a
 1099 00e1 0B       		.uleb128 0xb
 1100 00e2 3B       		.uleb128 0x3b
 1101 00e3 05       		.uleb128 0x5
 1102 00e4 49       		.uleb128 0x49
 1103 00e5 13       		.uleb128 0x13
 1104 00e6 02       		.uleb128 0x2
 1105 00e7 18       		.uleb128 0x18
 1106 00e8 00       		.byte	0
 1107 00e9 00       		.byte	0
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 36


 1108 00ea 0E       		.uleb128 0xe
 1109 00eb 2E       		.uleb128 0x2e
 1110 00ec 00       		.byte	0
 1111 00ed 3F       		.uleb128 0x3f
 1112 00ee 19       		.uleb128 0x19
 1113 00ef 03       		.uleb128 0x3
 1114 00f0 0E       		.uleb128 0xe
 1115 00f1 3A       		.uleb128 0x3a
 1116 00f2 0B       		.uleb128 0xb
 1117 00f3 3B       		.uleb128 0x3b
 1118 00f4 05       		.uleb128 0x5
 1119 00f5 27       		.uleb128 0x27
 1120 00f6 19       		.uleb128 0x19
 1121 00f7 49       		.uleb128 0x49
 1122 00f8 13       		.uleb128 0x13
 1123 00f9 11       		.uleb128 0x11
 1124 00fa 01       		.uleb128 0x1
 1125 00fb 12       		.uleb128 0x12
 1126 00fc 06       		.uleb128 0x6
 1127 00fd 40       		.uleb128 0x40
 1128 00fe 18       		.uleb128 0x18
 1129 00ff 9742     		.uleb128 0x2117
 1130 0101 19       		.uleb128 0x19
 1131 0102 00       		.byte	0
 1132 0103 00       		.byte	0
 1133 0104 0F       		.uleb128 0xf
 1134 0105 34       		.uleb128 0x34
 1135 0106 00       		.byte	0
 1136 0107 03       		.uleb128 0x3
 1137 0108 0E       		.uleb128 0xe
 1138 0109 3A       		.uleb128 0x3a
 1139 010a 0B       		.uleb128 0xb
 1140 010b 3B       		.uleb128 0x3b
 1141 010c 0B       		.uleb128 0xb
 1142 010d 49       		.uleb128 0x49
 1143 010e 13       		.uleb128 0x13
 1144 010f 3F       		.uleb128 0x3f
 1145 0110 19       		.uleb128 0x19
 1146 0111 02       		.uleb128 0x2
 1147 0112 18       		.uleb128 0x18
 1148 0113 00       		.byte	0
 1149 0114 00       		.byte	0
 1150 0115 00       		.byte	0
 1151              		.section	.debug_aranges,"",%progbits
 1152 0000 74000000 		.4byte	0x74
 1153 0004 0200     		.2byte	0x2
 1154 0006 00000000 		.4byte	.Ldebug_info0
 1155 000a 04       		.byte	0x4
 1156 000b 00       		.byte	0
 1157 000c 0000     		.2byte	0
 1158 000e 0000     		.2byte	0
 1159 0010 00000000 		.4byte	.LFB0
 1160 0014 20000000 		.4byte	.LFE0-.LFB0
 1161 0018 00000000 		.4byte	.LFB1
 1162 001c BC000000 		.4byte	.LFE1-.LFB1
 1163 0020 00000000 		.4byte	.LFB2
 1164 0024 48000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 37


 1165 0028 00000000 		.4byte	.LFB3
 1166 002c 48000000 		.4byte	.LFE3-.LFB3
 1167 0030 00000000 		.4byte	.LFB4
 1168 0034 20000000 		.4byte	.LFE4-.LFB4
 1169 0038 00000000 		.4byte	.LFB5
 1170 003c 20000000 		.4byte	.LFE5-.LFB5
 1171 0040 00000000 		.4byte	.LFB6
 1172 0044 20000000 		.4byte	.LFE6-.LFB6
 1173 0048 00000000 		.4byte	.LFB7
 1174 004c 20000000 		.4byte	.LFE7-.LFB7
 1175 0050 00000000 		.4byte	.LFB8
 1176 0054 20000000 		.4byte	.LFE8-.LFB8
 1177 0058 00000000 		.4byte	.LFB9
 1178 005c 20000000 		.4byte	.LFE9-.LFB9
 1179 0060 00000000 		.4byte	.LFB10
 1180 0064 1C000000 		.4byte	.LFE10-.LFB10
 1181 0068 00000000 		.4byte	.LFB11
 1182 006c 1C000000 		.4byte	.LFE11-.LFB11
 1183 0070 00000000 		.4byte	0
 1184 0074 00000000 		.4byte	0
 1185              		.section	.debug_ranges,"",%progbits
 1186              	.Ldebug_ranges0:
 1187 0000 00000000 		.4byte	.LFB0
 1188 0004 20000000 		.4byte	.LFE0
 1189 0008 00000000 		.4byte	.LFB1
 1190 000c BC000000 		.4byte	.LFE1
 1191 0010 00000000 		.4byte	.LFB2
 1192 0014 48000000 		.4byte	.LFE2
 1193 0018 00000000 		.4byte	.LFB3
 1194 001c 48000000 		.4byte	.LFE3
 1195 0020 00000000 		.4byte	.LFB4
 1196 0024 20000000 		.4byte	.LFE4
 1197 0028 00000000 		.4byte	.LFB5
 1198 002c 20000000 		.4byte	.LFE5
 1199 0030 00000000 		.4byte	.LFB6
 1200 0034 20000000 		.4byte	.LFE6
 1201 0038 00000000 		.4byte	.LFB7
 1202 003c 20000000 		.4byte	.LFE7
 1203 0040 00000000 		.4byte	.LFB8
 1204 0044 20000000 		.4byte	.LFE8
 1205 0048 00000000 		.4byte	.LFB9
 1206 004c 20000000 		.4byte	.LFE9
 1207 0050 00000000 		.4byte	.LFB10
 1208 0054 1C000000 		.4byte	.LFE10
 1209 0058 00000000 		.4byte	.LFB11
 1210 005c 1C000000 		.4byte	.LFE11
 1211 0060 00000000 		.4byte	0
 1212 0064 00000000 		.4byte	0
 1213              		.section	.debug_line,"",%progbits
 1214              	.Ldebug_line0:
 1215 0000 3F010000 		.section	.debug_str,"MS",%progbits,1
 1215      02004400 
 1215      00000201 
 1215      FB0E0D00 
 1215      01010101 
 1216              	.LASF15:
 1217 0000 72656731 		.ascii	"reg16\000"
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 38


 1217      3600
 1218              	.LASF18:
 1219 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1219      315F456E 
 1219      61626C65 
 1219      00
 1220              	.LASF23:
 1221 0013 70657269 		.ascii	"period\000"
 1221      6F6400
 1222              	.LASF3:
 1223 001a 73686F72 		.ascii	"short unsigned int\000"
 1223      7420756E 
 1223      7369676E 
 1223      65642069 
 1223      6E7400
 1224              	.LASF36:
 1225 002d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1.c\000"
 1225      6E657261 
 1225      7465645F 
 1225      536F7572 
 1225      63655C50 
 1226              	.LASF29:
 1227 004e 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1227      315F5265 
 1227      61645374 
 1227      61747573 
 1227      52656769 
 1228              	.LASF11:
 1229 0067 666C6F61 		.ascii	"float\000"
 1229      7400
 1230              	.LASF31:
 1231 006d 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1231      315F5772 
 1231      69746543 
 1231      6F6E7472 
 1231      6F6C5265 
 1232              	.LASF1:
 1233 0088 756E7369 		.ascii	"unsigned char\000"
 1233      676E6564 
 1233      20636861 
 1233      7200
 1234              	.LASF14:
 1235 0096 72656738 		.ascii	"reg8\000"
 1235      00
 1236              	.LASF34:
 1237 009b 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1237      315F5265 
 1237      61645065 
 1237      72696F64 
 1237      00
 1238              	.LASF5:
 1239 00ac 6C6F6E67 		.ascii	"long unsigned int\000"
 1239      20756E73 
 1239      69676E65 
 1239      6420696E 
 1239      7400
 1240              	.LASF9:
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 39


 1241 00be 75696E74 		.ascii	"uint8\000"
 1241      3800
 1242              	.LASF32:
 1243 00c4 636F6E74 		.ascii	"control\000"
 1243      726F6C00 
 1244              	.LASF25:
 1245 00cc 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1245      315F5365 
 1245      74496E74 
 1245      65727275 
 1245      70744D6F 
 1246              	.LASF33:
 1247 00e3 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1247      315F5265 
 1247      6164436F 
 1247      6D706172 
 1247      6500
 1248              	.LASF12:
 1249 00f5 646F7562 		.ascii	"double\000"
 1249      6C6500
 1250              	.LASF38:
 1251 00fc 50574D5F 		.ascii	"PWM_1_initVar\000"
 1251      315F696E 
 1251      69745661 
 1251      7200
 1252              	.LASF10:
 1253 010a 75696E74 		.ascii	"uint16\000"
 1253      313600
 1254              	.LASF20:
 1255 0111 50574D5F 		.ascii	"PWM_1_Init\000"
 1255      315F496E 
 1255      697400
 1256              	.LASF8:
 1257 011c 756E7369 		.ascii	"unsigned int\000"
 1257      676E6564 
 1257      20696E74 
 1257      00
 1258              	.LASF7:
 1259 0129 6C6F6E67 		.ascii	"long long unsigned int\000"
 1259      206C6F6E 
 1259      6720756E 
 1259      7369676E 
 1259      65642069 
 1260              	.LASF28:
 1261 0140 72657375 		.ascii	"result\000"
 1261      6C7400
 1262              	.LASF35:
 1263 0147 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1263      4320342E 
 1263      382E3420 
 1263      32303134 
 1263      30353236 
 1264 017a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1264      20726576 
 1264      6973696F 
 1264      6E203231 
 1264      31333538 
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 40


 1265 01ad 30202D66 		.ascii	"0 -ffunction-sections\000"
 1265      66756E63 
 1265      74696F6E 
 1265      2D736563 
 1265      74696F6E 
 1266              	.LASF37:
 1267 01c3 433A5C67 		.ascii	"C:\\gitData\\PSoC\\SFT1.0v\\Design01.cydsn\000"
 1267      69744461 
 1267      74615C50 
 1267      536F435C 
 1267      53465431 
 1268              	.LASF16:
 1269 01ea 73697A65 		.ascii	"sizetype\000"
 1269      74797065 
 1269      00
 1270              	.LASF22:
 1271 01f3 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1271      315F5772 
 1271      69746543 
 1271      6F6D7061 
 1271      726500
 1272              	.LASF6:
 1273 0206 6C6F6E67 		.ascii	"long long int\000"
 1273      206C6F6E 
 1273      6720696E 
 1273      7400
 1274              	.LASF30:
 1275 0214 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1275      315F5265 
 1275      6164436F 
 1275      6E74726F 
 1275      6C526567 
 1276              	.LASF26:
 1277 022e 696E7465 		.ascii	"interruptMode\000"
 1277      72727570 
 1277      744D6F64 
 1277      6500
 1278              	.LASF21:
 1279 023c 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1279      315F5772 
 1279      69746550 
 1279      6572696F 
 1279      6400
 1280              	.LASF2:
 1281 024e 73686F72 		.ascii	"short int\000"
 1281      7420696E 
 1281      7400
 1282              	.LASF27:
 1283 0258 6374726C 		.ascii	"ctrl\000"
 1283      00
 1284              	.LASF19:
 1285 025d 50574D5F 		.ascii	"PWM_1_Stop\000"
 1285      315F5374 
 1285      6F7000
 1286              	.LASF4:
 1287 0268 6C6F6E67 		.ascii	"long int\000"
 1287      20696E74 
ARM GAS  C:\Users\dskyNote\AppData\Local\Temp\ccJ7uzoH.s 			page 41


 1287      00
 1288              	.LASF13:
 1289 0271 63686172 		.ascii	"char\000"
 1289      00
 1290              	.LASF0:
 1291 0276 7369676E 		.ascii	"signed char\000"
 1291      65642063 
 1291      68617200 
 1292              	.LASF24:
 1293 0282 636F6D70 		.ascii	"compare\000"
 1293      61726500 
 1294              	.LASF17:
 1295 028a 50574D5F 		.ascii	"PWM_1_Start\000"
 1295      315F5374 
 1295      61727400 
 1296              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
